@page "/senzori-status"
@using DisertatieWeb.Models
@using DisertatieWeb.Models.DisertatieWeb.Models
@inject IHttpClientFactory HttpClientFactory
@inject DialogService DialogService
@inject NavigationManager NavigationManager

<PageTitle>Status Senzori</PageTitle>

<h3>Statusul Senzorilor</h3>

<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true"
                FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5"
                AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left"
                ShowPagingSummary="true" Data="@senzori"
                ColumnWidth="250px" SelectionMode="DataGridSelectionMode.Single">
    <Columns>
        <RadzenDataGridColumn TItem="Senzor" Property="Id" Title="ID" />
        <RadzenDataGridColumn TItem="Senzor" Property="Nume" Title="Nume" />
        <RadzenDataGridColumn TItem="Senzor" Property="Status" Title="Status" />
        <RadzenDataGridColumn TItem="Senzor" Context="senzor" Title="Detalii">
            <Template Context="senzor">
                <RadzenButton Icon="info" Text="Detalii" ButtonStyle="ButtonStyle.Primary"
                              Click="() => ShowSenzorDetaliiDialog(senzor)" />
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {
    private List<Senzor> senzori = new();
    private Senzor senzorSelectat;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var http = HttpClientFactory.CreateClient();
            senzori = await http.GetFromJsonAsync<List<Senzor>>(NavigationManager.BaseUri + "api/senzoriStatus");
        }
        catch (Exception ex)
        {
            Console.WriteLine("Eroare la încărcarea senzorilor: " + ex.Message);
        }
    }

    private async Task ShowSenzorDetaliiDialog(Senzor senzor)
    {
        senzorSelectat = senzor;

        await DialogService.OpenAsync("Detalii Senzor", ds =>
    @<RadzenStack Gap="1.5rem">
        <p><b>@senzorSelectat.Nume</b> - Status: @senzorSelectat.Status</p>
        <p><b>Detalii:</b> @senzorSelectat.Detalii</p>
        <RadzenButton Text="Închide" ButtonStyle="ButtonStyle.Secondary" Click="() => ds.Close()" />
    </RadzenStack>);
    }
}
